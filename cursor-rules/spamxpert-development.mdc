---
description:
globs:
alwaysApply: false
---
## Houzez Theme Integration

The plugin integrates with Houzez theme forms. Key files:
- Agent form: [agent-form.php](mdc:wp-content/themes/houzez/property-details/agent-form.php)
- Email functions: [emails-functions.php](mdc:wp-content/themes/houzez/framework/functions/emails-functions.php)

Required filters in Houzez:
- `houzez_property_agent_contact_validation`
- `houzez_schedule_tour_validation`
- `houzez_ele_inquiry_form_validation`

**Important**: Houzez forms have their own nonce validation. SpamXpert automatically skips its own nonce checks for these forms to avoid conflicts.

## IMPORTANT: Follow Cursor Rules Strictly

These cursor rules define the coding standards and patterns for SpamXpert. **All code must follow these rules exactly** to ensure:

1. **Consistency**: All integrations work the same way
2. **Maintainability**: Changes only need to be made in one place
3. **No Duplicate Logging**: Modules handle all logging
4. **Proper Validation Flow**: Base class methods return consistent format

### Key Rules to Remember:
- Use `$this->validate_submission()` NOT direct validator access
- Return `['is_valid' => bool, 'reason' => string, 'score' => int]`
- NO logging in integrations - modules handle it
- Use `__('Your submission was flagged as spam.', 'spamxpert')` for errors

See [CURSOR_RULES_COMPLIANCE_UPDATE.md](mdc:wp-content/plugins/spamxpert/CURSOR_RULES_COMPLIANCE_UPDATE.md) for recent refactoring details.

## Adding Hooks to Third-Party Code

When integrating with themes or plugins that lack necessary hooks:

1. **Add action hooks where needed** - Don't rely on JavaScript injection
2. **Follow the naming pattern**: `{prefix}_{context}_fields`
3. **Document all modifications** in integration documentation

Example:
```php
// Added to theme template file
<?php do_action('houzez_login_form_fields'); ?>
```

This ensures reliable, server-side injection of protection fields.

## Free vs Pro Features
